(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>a});var r=n(537),o=n.n(r),c=n(645),i=n.n(c)()(o());i.push([t.id,".container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    height: 50vh;\n}\n\n.hidden {\n    display: none;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,6BAA6B;IAC7B,YAAY;AAChB;;AAEA;IACI,aAAa;AACjB",sourcesContent:[".container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    height: 50vh;\n}\n\n.hidden {\n    display: none;\n}"],sourceRoot:""}]);const a=i},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,o,c){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(r)for(var a=0;a<this.length;a++){var d=this[a][0];null!=d&&(i[d]=!0)}for(var u=0;u<t.length;u++){var s=[].concat(t[u]);r&&i[s[0]]||(void 0!==c&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=c),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),e.push(s))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),c="/*# ".concat(o," */"),i=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(i).concat([c]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var c={},i=[],a=0;a<t.length;a++){var d=t[a],u=r.base?d[0]+r.base:d[0],s=c[u]||0,l="".concat(u," ").concat(s);c[u]=s+1;var p=n(l),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var f=o(m,r);r.byIndex=a,e.splice(a,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var c=r(t=t||[],o=o||{});return function(t){t=t||[];for(var i=0;i<c.length;i++){var a=n(c[i]);e[a].references--}for(var d=r(t,o),u=0;u<c.length;u++){var s=n(c[u]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}c=d}}},569:t=>{var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var c=n.sourceMap;c&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var c=e[r]={id:r,exports:{}};return t[r](c,c.exports,n),c.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0;var r={};(()=>{n.d(r,{O:()=>k});var t=n(379),e=n.n(t),o=n(795),c=n.n(o),i=n(569),a=n.n(i),d=n(565),u=n.n(d),s=n(216),l=n.n(s),p=n(589),m=n.n(p),f=n(426),v={};v.styleTagTransform=m(),v.setAttributes=u(),v.insert=a().bind(null,"head"),v.domAPI=c(),v.insertStyleElement=l(),e()(f.Z,v),f.Z&&f.Z.locals&&f.Z.locals;const h=(()=>{const t=document.createElement("input"),e=document.createElement("label");t.setAttribute("required",""),t.setAttribute("id","title"),e.setAttribute("for","title"),e.textContent="Title: ";const n=document.createElement("input"),r=document.createElement("label");n.setAttribute("id","description"),r.setAttribute("for","description"),r.textContent="Description: ";const o=document.createElement("select");o.textContent="Priority",o.setAttribute("id","priority");const c=document.createElement("option");c.setAttribute("value","High"),c.textContent="High";const i=document.createElement("option");i.setAttribute("value","Mid"),i.textContent="Mid";const a=document.createElement("option");a.setAttribute("value","Low"),a.textContent="Low",o.appendChild(c),o.appendChild(i),o.appendChild(a);const d=document.createElement("label");d.setAttribute("for","priority"),d.textContent="Priority: ";const u=document.createElement("input");u.setAttribute("type","date");const s=document.createElement("button");s.setAttribute("type","button"),s.setAttribute("class","formSubmit"),s.textContent="Submit";const l=document.createElement("button");l.setAttribute("type","button"),l.textContent="Cancel";const p=document.createElement("form");return p.appendChild(e),p.appendChild(t),p.appendChild(r),p.appendChild(n),p.appendChild(d),p.appendChild(o),p.appendChild(u),p.appendChild(s),p.appendChild(l),{title:t,description:n,priority:o,dueDate:u,submit:s,cancel:l,form:p}})(),y=(()=>{const t=document.createElement("input"),e=document.createElement("label");t.setAttribute("required",""),t.setAttribute("id","title"),e.setAttribute("for","title"),e.textContent="Project Title: ";const n=document.createElement("button");n.setAttribute("type","button"),n.setAttribute("class","projectSubmit"),n.textContent="Submit";const r=document.createElement("form");return r.appendChild(e),r.appendChild(t),r.appendChild(n),{title:t,form:r,submit:n}})(),b=(document.querySelector(".container"),h.cancel.addEventListener("click",(()=>{h.form.remove()})),(()=>{const t=h.form,e=document.createElement("button");return e.textContent="Edit",e.setAttribute("class",".formEdit"),e.setAttribute("type","button"),{editForm:t,switchForm:()=>{e.removeAttribute("id"),t.appendChild(e)},formEditButton:e}})()),A=()=>{const t=document.querySelectorAll(".task"),e=document.querySelectorAll(".remove"),n=document.querySelectorAll(".edit");t.forEach(((t,e)=>{t.id=e})),e.forEach(((t,e)=>{t.id=e})),n.forEach(((t,e)=>{t.id=e}))},C=()=>{const t=document.querySelector(".taskContainer");document.querySelectorAll(".task").forEach((e=>{t.removeChild(e)}));for(let e=0;e<P.currentProject.array.length;e++){const n=document.createElement("div");n.textContent=P.currentProject.array[e].title,n.setAttribute("class","title"),document.createElement("div").textContent=P.currentProject.array[e].description;const r=document.createElement("div");r.textContent=P.currentProject.array[e].dueDate;const o=document.createElement("button");o.setAttribute("id",e),o.setAttribute("class","remove"),o.textContent="remove",o.addEventListener("click",(()=>{const e=document.querySelectorAll(".task");P.currentProject.array.splice(o.id,1),t.removeChild(e[o.id]),A(),console.log(P.currentProject)}));const c=document.createElement("div");c.setAttribute("id",e),c.setAttribute("class","task"),c.appendChild(n),c.appendChild(r),c.appendChild(o);const i=document.createElement("button");i.setAttribute("id",e),i.setAttribute("class","edit"),i.textContent="edit",i.addEventListener("click",(()=>{c.appendChild(b.editForm),b.switchForm(),b.formEditButton.setAttribute("id",i.id),b.formEditButton.classList.remove("hidden"),h.submit.classList.add("hidden")})),c.appendChild(i),t.appendChild(c)}},E=(b.formEditButton.addEventListener("click",(()=>{const t=h.title.value,e=h.description.value,n=h.priority.value,r=h.dueDate.value;P.currentProject.array[b.formEditButton.id].title=t,P.currentProject.array[b.formEditButton.id].description=e,P.currentProject.array[b.formEditButton.id].priority=n,P.currentProject.array[b.formEditButton.id].dueDate=r,console.log(P.currentProject.array),C()})),()=>{const t=document.querySelector(".projectContainer");document.querySelectorAll(".project").forEach((e=>{t.removeChild(e)}));for(let e=0;e<g.projectList.length;e++){const n=document.createElement("a");n.textContent=g.projectList[e].title,n.setAttribute("id",e),n.setAttribute("class","projectTitle"),n.addEventListener("click",(()=>{P.currentProject=g.projectList[n.id],k.currentProjectTitle.textContent=P.currentProject.title,C()}));const r=document.createElement("button");r.setAttribute("id",e),r.setAttribute("class","projectRemove"),r.textContent="remove",r.addEventListener("click",(()=>{const e=document.querySelectorAll(".project");g.projectList.splice(r.id,1),t.removeChild(e[r.id]),j(),P.currentProject=P.today,k.currentProjectTitle.textContent=P.currentProject.title,C()}));const o=document.createElement("div");o.setAttribute("id",e),o.setAttribute("class","project"),o.appendChild(n),e>0&&o.appendChild(r),t.appendChild(o)}}),j=()=>{const t=document.querySelectorAll(".project"),e=document.querySelectorAll(".projectRemove"),n=document.querySelectorAll(".projectTitle");t.forEach(((t,e)=>{t.id=e})),e.forEach(((t,e)=>{t.id=e+1})),n.forEach(((t,e)=>{t.id=e}))},x=t=>({title:t,array:[]}),P=(()=>{const t=x("today");return{today:t,addTaskToArray:t=>{const e=(n=h.title.value,r=h.description.value,o=h.priority.value,c=h.dueDate.value,{title:n,description:r,priority:o,dueDate:c});var n,r,o,c;t.array.push(e)},currentProject:t}})(),g=(()=>{const t=[P.today];return{projectList:t,addtoProjectList:()=>{const e=y.title.value,n=x(e);t.push(n),console.log(t)}}})(),L=document.querySelector(".container"),S=document.querySelector(".currentProject"),T=document.createElement("button");T.textContent="New Tasks",T.addEventListener("click",(()=>{h.title.value="",h.description.value="",h.dueDate.value="",h.submit.classList.remove("hidden"),b.formEditButton.classList.add("hidden"),L.appendChild(h.form),h.submit.addEventListener("click",(()=>{h.title.checkValidity()?(P.addTaskToArray(P.currentProject),console.log(P.currentProject),h.title.value="",h.description.value="",h.dueDate.value="",C()):h.title.reportValidity()}))})),L.appendChild(y.form),L.appendChild(T),y.submit.addEventListener("click",(()=>{y.title.checkValidity()?(g.addtoProjectList(),y.title.value="",E()):y.title.reportValidity()}));const k=(()=>{const t=document.createElement("p");return t.textContent=P.currentProject.title,{currentProjectTitle:t,appendTitle:()=>S.appendChild(t)}})();C(),E(),k.appendTitle()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,