(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>a});var r=n(537),o=n.n(r),c=n(645),i=n.n(c)()(o());i.push([t.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const a=i},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,o,c){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(r)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(i[s]=!0)}for(var u=0;u<t.length;u++){var d=[].concat(t[u]);r&&i[d[0]]||(void 0!==c&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=c),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),c="/*# ".concat(o," */"),i=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(i).concat([c]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var c={},i=[],a=0;a<t.length;a++){var s=t[a],u=r.base?s[0]+r.base:s[0],d=c[u]||0,l="".concat(u," ").concat(d);c[u]=d+1;var p=n(l),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var f=o(m,r);r.byIndex=a,e.splice(a,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var c=r(t=t||[],o=o||{});return function(t){t=t||[];for(var i=0;i<c.length;i++){var a=n(c[i]);e[a].references--}for(var s=r(t,o),u=0;u<c.length;u++){var d=n(c[u]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}c=s}}},569:t=>{var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var c=n.sourceMap;c&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var c=e[r]={id:r,exports:{}};return t[r](c,c.exports,n),c.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{var t=n(379),e=n.n(t),r=n(795),o=n.n(r),c=n(569),i=n.n(c),a=n(565),s=n.n(a),u=n(216),d=n.n(u),l=n(589),p=n.n(l),m=n(426),f={};f.styleTagTransform=p(),f.setAttributes=s(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=d(),e()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;const v=()=>{const t=document.querySelectorAll(".task"),e=document.querySelectorAll(".remove");t.forEach(((t,e)=>{t.id=e})),e.forEach(((t,e)=>{t.id=e}))},h=()=>{const t=document.querySelectorAll(".project"),e=document.querySelectorAll(".projectRemove");t.forEach(((t,e)=>{t.id=e})),e.forEach(((t,e)=>{t.id=e}))},y=(()=>{const t=document.createElement("input"),e=document.createElement("label");t.setAttribute("required",""),t.setAttribute("id","title"),e.setAttribute("for","title"),e.textContent="Title: ";const n=document.createElement("input"),r=document.createElement("label");n.setAttribute("id","description"),r.setAttribute("for","description"),r.textContent="Description: ";const o=document.createElement("select");o.textContent="Priority",o.setAttribute("id","priority");const c=document.createElement("option");c.setAttribute("value","High"),c.textContent="High";const i=document.createElement("option");i.setAttribute("value","Mid"),i.textContent="Mid";const a=document.createElement("option");a.setAttribute("value","Low"),a.textContent="Low",o.appendChild(c),o.appendChild(i),o.appendChild(a);const s=document.createElement("label");s.setAttribute("for","priority"),s.textContent="Priority: ";const u=document.createElement("input");u.setAttribute("type","date");const d=document.createElement("button");d.setAttribute("type","button"),d.textContent="Submit",d.addEventListener("click",(()=>b.submit()));const l=document.createElement("button");l.setAttribute("type","button"),l.textContent="Cancel";const p=document.createElement("form");return p.appendChild(e),p.appendChild(t),p.appendChild(r),p.appendChild(n),p.appendChild(s),p.appendChild(o),p.appendChild(u),p.appendChild(d),p.appendChild(l),{title:t,description:n,priority:o,dueDate:u,submit:d,cancel:l,form:p}})(),b={submit:()=>{y.title.checkValidity()?(x.addTaskToArray(x.currentProject),console.log(x.currentProject),y.title.value="",y.description.value="",y.dueDate.value="",(()=>{const t=document.querySelector(".container");document.querySelectorAll(".task").forEach((e=>{t.removeChild(e)}));for(let e=0;e<x.currentProject.array.length;e++){const n=document.createElement("div");n.textContent=x.currentProject.array[e].title,document.createElement("div").textContent=x.currentProject.array[e].description;const r=document.createElement("div");r.textContent=x.currentProject.array[e].dueDate;const o=document.createElement("button");o.setAttribute("id",e),o.setAttribute("class","remove"),o.textContent="remove",o.addEventListener("click",(()=>{const e=document.getElementById(o.id);x.currentProject.array.splice(o.id,1),t.removeChild(e),v(),console.log(x.currentProject)}));const c=document.createElement("div");c.setAttribute("id",e),c.setAttribute("class","task"),c.appendChild(n),c.appendChild(r),c.appendChild(o),t.appendChild(c)}})()):y.title.reportValidity()}},C=(()=>{const t=document.createElement("input"),e=document.createElement("label");t.setAttribute("required",""),t.setAttribute("id","title"),e.setAttribute("for","title"),e.textContent="Project Title: ";const n=document.createElement("button");n.setAttribute("type","button"),n.textContent="Submit",n.addEventListener("click",(()=>E.submit()));const r=document.createElement("form");return r.appendChild(e),r.appendChild(t),r.appendChild(n),{title:t,form:r}})(),E={submit:()=>{C.title.checkValidity()?(g.addtoProjectList(),C.title.value="",(()=>{const t=document.querySelector(".container");document.querySelectorAll(".project").forEach((e=>{t.removeChild(e)}));for(let e=0;e<g.projectList.length;e++){const n=document.createElement("a");n.textContent=g.projectList[e].title;const r=document.createElement("button");r.setAttribute("id",e),r.setAttribute("class","projectRemove"),r.textContent="remove",r.addEventListener("click",(()=>{const e=document.getElementById(r.id);g.projectList.splice(r.id,1),t.removeChild(e),h(),console.log(g.projectList)}));const o=document.createElement("div");o.setAttribute("id",e),o.setAttribute("class","project"),o.appendChild(n),o.appendChild(r),t.appendChild(o)}})()):C.title.reportValidity()}},A=t=>({title:t,array:[]}),x=(()=>{const t=A("today");return{today:t,addTaskToArray:t=>{const e=(n=y.title.value,r=y.description.value,o=y.priority.value,c=y.dueDate.value,{title:n,description:r,priority:o,dueDate:c});var n,r,o,c;t.array.push(e)},currentProject:t}})(),g=(()=>{const t=[x.today];return{projectList:t,addtoProjectList:()=>{const e=C.title.value,n=A(e);t.push(n),console.log(t)}}})(),j=document.querySelector(".container");j.appendChild(y.form),j.appendChild(C.form)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,