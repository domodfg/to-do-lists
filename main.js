(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(537),o=n.n(r),i=n(645),a=n.n(i)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap);"]),a.push([e.id,':root {\n  font-size: 1.2rem;\n}\n\nbody {\n  margin: 0;\n  font-family: "Quicksand", sans-serif;\n}\n\nh1,\nh2 {\n  padding-left: 15px;\n}\n\na:hover {\n  font-weight: 700;\n}\n\n.createTask {\n  font-family: "Quicksand", sans-serif;\n  font-size: 1.2rem;\n  padding: 1vh 1vw;\n  background-color: #8d742f;\n  color: white;\n  border: none;\n  border-radius: 10px;\n}\n\n.createTask:hover,\n.createProject:hover {\n  transform: scale(1.1);\n}\n\nimg:hover {\n  transform: scale(1.2);\n}\n\n.createProject {\n  font-family: "Quicksand", sans-serif;\n  padding: 0.5vh 0.5vw;\n  background-color: #4c65c3;\n  color: white;\n  border: none;\n  border-radius: 10px;\n}\n\n.currentProject {\n  max-width: 30vw;\n  font-size: 1.7rem;\n  font-weight: 600;\n  overflow: hidden;\n}\n\n.container {\n  display: grid;\n  grid-template-columns: 1fr 5fr;\n  grid-template-rows: 10fr 0.5fr;\n  width: 100vw;\n  min-height: 100vh;\n}\n\n.projectContainer {\n  width: 100%;\n  justify-self: center;\n  display: grid;\n  grid-template-rows: 1fr 5fr;\n  background-color: #002c30;\n  color: white;\n}\n\n.rightSide {\n  display: grid;\n  grid-template-rows: 2fr 10fr;\n}\n\n.hidden {\n  display: none;\n}\n\n.header {\n  width: 100%;\n  display: flex;\n  background-color: #0d1112;\n  color: white;\n}\n\n.currentProject {\n  width: 30vw;\n  text-align: center;\n  align-self: center;\n}\n\n.createTask {\n  align-self: center;\n}\n\n.taskContainer {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10vh 10vw;\n  background-color: #0d1112;\n  color: white;\n}\n\n.task {\n  width: 60%;\n  max-width: 50vw;\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  border: 1px white solid;\n  border-radius: 10px;\n  padding: 10px 30px;\n}\n\n.form {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 15px;\n  width: 50vw;\n  padding: 2vh 0px;\n}\n\n.title {\n  flex: 1;\n  overflow: hidden;\n}\n\n.project {\n  display: flex;\n  width: 70%;\n  justify-content: space-between;\n  padding-left: 1vw;\n  align-items: center;\n}\n\n.projectList {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.projectForm {\n  display: flex;\n  flex-wrap: wrap;\n  padding-left: 10px;\n}\n\n.createProject {\n  align-self: flex-start;\n  margin-left: 1vw;\n}\n\n.projectTitle {\n  max-width: 10vw;\n  overflow: hidden;\n}\n\n.footer {\n  text-align: center;\n  align-self: center;\n  justify-self: center;\n  grid-column: 1 / 3;\n  background-color: #2a2a2a;\n  width: 100%;\n  color: white;\n}\n\ninput,\nselect {\n  border-radius: 5px;\n  border: 1px white solid;\n  padding-left: 5px;\n  font-family: "Quicksand", sans-serif;\n  font-size: 0.8rem;\n  background-color: #041422;\n  color: white;\n}\n\ninput[type="checkbox"] {\n  width: 1rem;\n  height: 1rem;\n  -webkit-appearance: none;\n  border-radius: 50%;\n  transition: background 300ms;\n}\n\n[type="checkbox"]:checked {\n  background-color: #10ff00;\n}\n\n.congrat {\n  border: none;\n  font-size: 2.5rem;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,SAAS;EACT,oCAAoC;AACtC;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,oCAAoC;EACpC,iBAAiB;EACjB,gBAAgB;EAChB,yBAAyB;EACzB,YAAY;EACZ,YAAY;EACZ,mBAAmB;AACrB;;AAEA;;EAEE,qBAAqB;AACvB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,oCAAoC;EACpC,oBAAoB;EACpB,yBAAyB;EACzB,YAAY;EACZ,YAAY;EACZ,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,8BAA8B;EAC9B,YAAY;EACZ,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,oBAAoB;EACpB,aAAa;EACb,2BAA2B;EAC3B,yBAAyB;EACzB,YAAY;AACd;;AAEA;EACE,aAAa;EACb,4BAA4B;AAC9B;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,WAAW;EACX,aAAa;EACb,yBAAyB;EACzB,YAAY;AACd;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,kBAAkB;EAClB,yBAAyB;EACzB,YAAY;AACd;;AAEA;EACE,UAAU;EACV,eAAe;EACf,aAAa;EACb,mBAAmB;EACnB,eAAe;EACf,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,eAAe;EACf,mBAAmB;EACnB,SAAS;EACT,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,OAAO;EACP,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,UAAU;EACV,8BAA8B;EAC9B,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,eAAe;EACf,SAAS;AACX;;AAEA;EACE,aAAa;EACb,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,sBAAsB;EACtB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,oBAAoB;EACpB,kBAAkB;EAClB,yBAAyB;EACzB,WAAW;EACX,YAAY;AACd;;AAEA;;EAEE,kBAAkB;EAClB,uBAAuB;EACvB,iBAAiB;EACjB,oCAAoC;EACpC,iBAAiB;EACjB,yBAAyB;EACzB,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,wBAAwB;EACxB,kBAAkB;EAClB,4BAA4B;AAC9B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,YAAY;EACZ,iBAAiB;AACnB",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap");\n\n:root {\n  font-size: 1.2rem;\n}\n\nbody {\n  margin: 0;\n  font-family: "Quicksand", sans-serif;\n}\n\nh1,\nh2 {\n  padding-left: 15px;\n}\n\na:hover {\n  font-weight: 700;\n}\n\n.createTask {\n  font-family: "Quicksand", sans-serif;\n  font-size: 1.2rem;\n  padding: 1vh 1vw;\n  background-color: #8d742f;\n  color: white;\n  border: none;\n  border-radius: 10px;\n}\n\n.createTask:hover,\n.createProject:hover {\n  transform: scale(1.1);\n}\n\nimg:hover {\n  transform: scale(1.2);\n}\n\n.createProject {\n  font-family: "Quicksand", sans-serif;\n  padding: 0.5vh 0.5vw;\n  background-color: #4c65c3;\n  color: white;\n  border: none;\n  border-radius: 10px;\n}\n\n.currentProject {\n  max-width: 30vw;\n  font-size: 1.7rem;\n  font-weight: 600;\n  overflow: hidden;\n}\n\n.container {\n  display: grid;\n  grid-template-columns: 1fr 5fr;\n  grid-template-rows: 10fr 0.5fr;\n  width: 100vw;\n  min-height: 100vh;\n}\n\n.projectContainer {\n  width: 100%;\n  justify-self: center;\n  display: grid;\n  grid-template-rows: 1fr 5fr;\n  background-color: #002c30;\n  color: white;\n}\n\n.rightSide {\n  display: grid;\n  grid-template-rows: 2fr 10fr;\n}\n\n.hidden {\n  display: none;\n}\n\n.header {\n  width: 100%;\n  display: flex;\n  background-color: #0d1112;\n  color: white;\n}\n\n.currentProject {\n  width: 30vw;\n  text-align: center;\n  align-self: center;\n}\n\n.createTask {\n  align-self: center;\n}\n\n.taskContainer {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10vh 10vw;\n  background-color: #0d1112;\n  color: white;\n}\n\n.task {\n  width: 60%;\n  max-width: 50vw;\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  border: 1px white solid;\n  border-radius: 10px;\n  padding: 10px 30px;\n}\n\n.form {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 15px;\n  width: 50vw;\n  padding: 2vh 0px;\n}\n\n.title {\n  flex: 1;\n  overflow: hidden;\n}\n\n.project {\n  display: flex;\n  width: 70%;\n  justify-content: space-between;\n  padding-left: 1vw;\n  align-items: center;\n}\n\n.projectList {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.projectForm {\n  display: flex;\n  flex-wrap: wrap;\n  padding-left: 10px;\n}\n\n.createProject {\n  align-self: flex-start;\n  margin-left: 1vw;\n}\n\n.projectTitle {\n  max-width: 10vw;\n  overflow: hidden;\n}\n\n.footer {\n  text-align: center;\n  align-self: center;\n  justify-self: center;\n  grid-column: 1 / 3;\n  background-color: #2a2a2a;\n  width: 100%;\n  color: white;\n}\n\ninput,\nselect {\n  border-radius: 5px;\n  border: 1px white solid;\n  padding-left: 5px;\n  font-family: "Quicksand", sans-serif;\n  font-size: 0.8rem;\n  background-color: #041422;\n  color: white;\n}\n\ninput[type="checkbox"] {\n  width: 1rem;\n  height: 1rem;\n  -webkit-appearance: none;\n  border-radius: 50%;\n  transition: background 300ms;\n}\n\n[type="checkbox"]:checked {\n  background-color: #10ff00;\n}\n\n.congrat {\n  border: none;\n  font-size: 2.5rem;\n}\n'],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var A=0;A<e.length;A++){var s=[].concat(e[A]);r&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),t.push(s))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},a=[],c=0;c<e.length;c++){var d=e[c],A=r.base?d[0]+r.base:d[0],s=i[A]||0,l="".concat(A," ").concat(s);i[A]=s+1;var p=n(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var f=o(u,r);r.byIndex=c,t.splice(c,0,{identifier:l,updater:f,references:1})}a.push(l)}return a}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=n(i[a]);t[c].references--}for(var d=r(e,o),A=0;A<i.length;A++){var s=n(i[A]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}i=d}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0;var r={};(()=>{n.d(r,{O:()=>O});var e=n(379),t=n.n(e),o=n(795),i=n.n(o),a=n(569),c=n.n(a),d=n(565),A=n.n(d),s=n(216),l=n.n(s),p=n(589),u=n.n(p),f=n(426),m={};m.styleTagTransform=u(),m.setAttributes=A(),m.insert=c().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=l(),t()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;const E=n.p+"8905629feddce646246d.png",C=n.p+"f0f464d886429f8c9eb1.png",h=(()=>{const e=document.createElement("input"),t=document.createElement("label");e.setAttribute("required",""),e.setAttribute("id","title"),t.setAttribute("for","title"),t.textContent="Title: ";const n=document.createElement("input"),r=document.createElement("label");n.setAttribute("id","description"),r.setAttribute("for","description"),r.textContent="Description: ";const o=document.createElement("select");o.textContent="Priority",o.setAttribute("id","priority");const i=document.createElement("option");i.setAttribute("value","High"),i.textContent="High";const a=document.createElement("option");a.setAttribute("value","Mid"),a.textContent="Mid";const c=document.createElement("option");c.setAttribute("value","Low"),c.textContent="Low",o.appendChild(i),o.appendChild(a),o.appendChild(c);const d=document.createElement("label");d.setAttribute("for","priority"),d.textContent="Priority: ";const A=document.createElement("input");A.setAttribute("type","date"),A.setAttribute("class","date");const s=new Image;s.src=C,s.setAttribute("type","button"),s.setAttribute("class","formSubmit");const l=new Image;l.src=E,l.setAttribute("type","button");const p=document.createElement("form");p.setAttribute("class","form");const u=document.createElement("div");u.appendChild(t),u.appendChild(e);const f=document.createElement("div");f.appendChild(r),f.appendChild(n);const m=document.createElement("div");return m.appendChild(d),m.appendChild(o),p.appendChild(u),p.appendChild(f),p.appendChild(m),p.appendChild(A),p.appendChild(s),p.appendChild(l),{title:e,description:n,priority:o,dueDate:A,submit:s,cancel:l,form:p}})(),B=(()=>{const e=document.createElement("input"),t=document.createElement("label");e.setAttribute("required",""),e.setAttribute("id","title"),t.setAttribute("for","title"),t.textContent="Project Title: ";const n=new Image;n.src=C,n.setAttribute("type","button"),n.setAttribute("class","projectSubmit");const r=new Image;r.src=E,r.setAttribute("type","button");const o=document.createElement("form");return o.setAttribute("class","projectForm"),o.appendChild(t),o.appendChild(e),o.appendChild(n),o.appendChild(r),{title:e,form:o,submit:n,cancel:r}})(),g=(h.cancel.addEventListener("click",(()=>{h.form.remove()})),B.cancel.addEventListener("click",(()=>{B.form.remove()})),n.p+"bf24433d62ff61ca500b.png"),y=(()=>{const e=h.form,t=new Image;return t.src=g,t.setAttribute("class",".formEdit"),t.setAttribute("type","button"),{editForm:e,switchForm:()=>{t.removeAttribute("id"),e.removeChild(h.cancel),e.appendChild(t),e.appendChild(h.cancel)},formEditButton:t}})(),v=(()=>{const e=localStorage.getItem("projectStorage");return{projectStoreParsed:JSON.parse(e),store:()=>{localStorage.setItem("projectStorage",JSON.stringify(L.projectList))}}})(),b=n.p+"31bb92f769b58c794b39.png",w=n.p+"e21ce55f730ff6524c4e.png",x=()=>{const e=document.querySelectorAll(".task"),t=document.querySelectorAll(".remove"),n=document.querySelectorAll(".edit");e.forEach(((e,t)=>{e.id=t})),t.forEach(((e,t)=>{e.id=t})),n.forEach(((e,t)=>{e.id=t}))},k=()=>{const e=document.querySelector(".taskContainer");document.querySelectorAll(".task").forEach((t=>{e.removeChild(t)}));for(let t=0;t<T.currentProject.array.length;t++){const n=document.createElement("div");n.textContent=T.currentProject.array[t].title,n.setAttribute("class","title"),document.createElement("div").textContent=T.currentProject.array[t].description;const r=document.createElement("div");r.textContent=T.currentProject.array[t].dueDate,r.setAttribute("class","dueDate");const o=document.createElement("input");o.setAttribute("type","checkbox");const i=new Image;i.src=w,i.setAttribute("id",t),i.setAttribute("class","remove"),i.addEventListener("click",(()=>{const t=document.querySelectorAll(".task");T.currentProject.array.splice(i.id,1),e.removeChild(t[i.id]),x(),v.store(),O.displayIfEmpty()}));const a=new Image;a.src=b,a.setAttribute("id",t),a.setAttribute("class","edit"),a.addEventListener("click",(()=>{c.appendChild(y.editForm),y.switchForm(),y.formEditButton.setAttribute("id",a.id),y.formEditButton.classList.remove("hidden"),h.submit.classList.add("hidden"),h.title.value=T.currentProject.array[y.formEditButton.id].title,h.description.value=T.currentProject.array[y.formEditButton.id].description,h.priority.value=T.currentProject.array[y.formEditButton.id].priority,h.dueDate.value=T.currentProject.array[y.formEditButton.id].dueDate}));const c=document.createElement("div");c.setAttribute("id",t),c.setAttribute("class","task"),c.appendChild(a),c.appendChild(o),c.appendChild(n),c.appendChild(r),c.appendChild(i),e.appendChild(c)}},j=(y.formEditButton.addEventListener("click",(()=>{if(h.title.checkValidity()){const e=h.title.value,t=h.description.value,n=h.priority.value,r=h.dueDate.value;T.currentProject.array[y.formEditButton.id].title=e,T.currentProject.array[y.formEditButton.id].description=t,T.currentProject.array[y.formEditButton.id].priority=n,T.currentProject.array[y.formEditButton.id].dueDate=r,v.store(),console.log(T.currentProject.array),k()}else h.title.reportValidity()})),()=>{const e=document.querySelector(".projectList");document.querySelectorAll(".project").forEach((t=>{e.removeChild(t)}));for(let t=0;t<L.projectList.length;t++){const n=document.createElement("a");n.textContent=L.projectList[t].title,n.setAttribute("id",t),n.setAttribute("class","projectTitle"),n.addEventListener("click",(()=>{T.currentProject=L.projectList[n.id],O.currentProjectTitle.textContent=T.currentProject.title,k(),O.displayIfEmpty()}));const r=new Image;r.src=w,r.setAttribute("id",t),r.setAttribute("class","projectRemove"),r.addEventListener("click",(()=>{const t=document.querySelectorAll(".project");L.projectList.splice(r.id,1),e.removeChild(t[r.id]),v.store(),S(),T.currentProject=localStorage.hasOwnProperty("projectStorage")?v.projectStoreParsed[0]:T.today,O.currentProjectTitle.textContent=T.currentProject.title,k(),O.displayIfEmpty()}));const o=document.createElement("div");o.setAttribute("id",t),o.setAttribute("class","project"),o.appendChild(n),t>0&&o.appendChild(r),e.appendChild(o)}}),S=()=>{const e=document.querySelectorAll(".project"),t=document.querySelectorAll(".projectRemove"),n=document.querySelectorAll(".projectTitle");e.forEach(((e,t)=>{e.id=t})),t.forEach(((e,t)=>{e.id=t+1})),n.forEach(((e,t)=>{e.id=t}))},P=e=>({title:e,array:[]}),T=(()=>{const e=P("today");return{today:e,addTaskToArray:e=>{const t=(n=h.title.value,r=h.description.value,o=h.priority.value,i=h.dueDate.value,{title:n,description:r,priority:o,dueDate:i});var n,r,o,i;e.array.push(t)},currentProject:localStorage.hasOwnProperty("projectStorage")?v.projectStoreParsed[0]:e}})(),L=(()=>{let e=localStorage.hasOwnProperty("projectStorage")?v.projectStoreParsed:[T.today];return{projectList:e,addtoProjectList:()=>{const t=B.title.value,n=P(t);e.push(n)}}})(),Y=document.querySelector(".taskContainer"),q=document.querySelector(".projectList"),I=document.querySelector(".currentProject"),z=document.querySelector(".createTask"),D=document.querySelector(".createProject");z.addEventListener("click",(()=>{h.title.value="",h.description.value="",h.dueDate.value="",h.submit.classList.remove("hidden"),y.formEditButton.classList.add("hidden"),Y.appendChild(h.form)})),D.addEventListener("click",(()=>{q.appendChild(B.form)})),h.submit.addEventListener("click",(()=>{h.title.checkValidity()?(T.addTaskToArray(T.currentProject),v.store(),h.title.value="",h.description.value="",h.dueDate.value="",k(),h.form.remove()):h.title.reportValidity()})),B.submit.addEventListener("click",(e=>{B.title.checkValidity()?(L.addtoProjectList(),v.store(),B.title.value="",j(),B.form.remove()):B.title.reportValidity()})),B.title.addEventListener("keypress",(e=>{"Enter"===e.key&&(console.log("gay"),e.preventDefault())}));const O=(()=>{const e=document.createElement("p");return e.textContent=T.currentProject.title,{currentProjectTitle:e,appendTitle:()=>I.appendChild(e),displayIfEmpty:()=>{if(0===Y.childNodes.length){const e=document.createElement("div");e.setAttribute("class","congrat task"),e.textContent="Yay! nothing more to do!",Y.appendChild(e)}}}})();j(),k(),O.appendTitle(),O.displayIfEmpty()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,