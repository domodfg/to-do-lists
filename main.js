(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>a});var r=n(537),o=n.n(r),c=n(645),i=n.n(c)()(o());i.push([t.id,".container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    height: 50vh;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,6BAA6B;IAC7B,YAAY;AAChB",sourcesContent:[".container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    height: 50vh;\n}"],sourceRoot:""}]);const a=i},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,o,c){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(r)for(var a=0;a<this.length;a++){var u=this[a][0];null!=u&&(i[u]=!0)}for(var l=0;l<t.length;l++){var s=[].concat(t[l]);r&&i[s[0]]||(void 0!==c&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=c),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),e.push(s))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),c="/*# ".concat(o," */"),i=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(i).concat([c]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var c={},i=[],a=0;a<t.length;a++){var u=t[a],l=r.base?u[0]+r.base:u[0],s=c[l]||0,d="".concat(l," ").concat(s);c[l]=s+1;var p=n(d),m={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var f=o(m,r);r.byIndex=a,e.splice(a,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var c=r(t=t||[],o=o||{});return function(t){t=t||[];for(var i=0;i<c.length;i++){var a=n(c[i]);e[a].references--}for(var u=r(t,o),l=0;l<c.length;l++){var s=n(c[l]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}c=u}}},569:t=>{var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var c=n.sourceMap;c&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var c=e[r]={id:r,exports:{}};return t[r](c,c.exports,n),c.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0;var r={};(()=>{n.d(r,{O:()=>k});var t=n(379),e=n.n(t),o=n(795),c=n.n(o),i=n(569),a=n.n(i),u=n(565),l=n.n(u),s=n(216),d=n.n(s),p=n(589),m=n.n(p),f=n(426),v={};v.styleTagTransform=m(),v.setAttributes=l(),v.insert=a().bind(null,"head"),v.domAPI=c(),v.insertStyleElement=d(),e()(f.Z,v),f.Z&&f.Z.locals&&f.Z.locals;const h=()=>{const t=document.querySelectorAll(".task"),e=document.querySelectorAll(".remove");t.forEach(((t,e)=>{t.id=e})),e.forEach(((t,e)=>{t.id=e}))},y=()=>{const t=document.querySelector(".taskContainer");document.querySelectorAll(".task").forEach((e=>{t.removeChild(e)}));for(let e=0;e<P.currentProject.array.length;e++){const n=document.createElement("div");n.textContent=P.currentProject.array[e].title,document.createElement("div").textContent=P.currentProject.array[e].description;const r=document.createElement("div");r.textContent=P.currentProject.array[e].dueDate;const o=document.createElement("button");o.setAttribute("id",e),o.setAttribute("class","remove"),o.textContent="remove",o.addEventListener("click",(()=>{const e=document.querySelectorAll(".task");P.currentProject.array.splice(o.id,1),t.removeChild(e[o.id]),h(),console.log(P.currentProject)}));const c=document.createElement("div");c.setAttribute("id",e),c.setAttribute("class","task"),c.appendChild(n),c.appendChild(r),c.appendChild(o),t.appendChild(c)}},b=()=>{const t=document.querySelector(".projectContainer");document.querySelectorAll(".project").forEach((e=>{t.removeChild(e)}));for(let e=0;e<S.projectList.length;e++){const n=document.createElement("a");n.textContent=S.projectList[e].title,n.setAttribute("id",e),n.setAttribute("class","projectTitle"),n.addEventListener("click",(()=>{P.currentProject=S.projectList[n.id],k.currentProjectTitle.textContent=P.currentProject.title,y()}));const r=document.createElement("button");r.setAttribute("id",e),r.setAttribute("class","projectRemove"),r.textContent="remove",r.addEventListener("click",(()=>{const e=document.querySelectorAll(".project");S.projectList.splice(r.id,1),t.removeChild(e[r.id]),C(),P.currentProject=P.today,k.currentProjectTitle.textContent=P.currentProject.title,y()}));const o=document.createElement("div");o.setAttribute("id",e),o.setAttribute("class","project"),o.appendChild(n),e>0&&o.appendChild(r),t.appendChild(o)}},C=()=>{const t=document.querySelectorAll(".project"),e=document.querySelectorAll(".projectRemove"),n=document.querySelectorAll(".projectTitle");t.forEach(((t,e)=>{t.id=e})),e.forEach(((t,e)=>{t.id=e+1})),n.forEach(((t,e)=>{t.id=e}))},A=(()=>{const t=document.createElement("input"),e=document.createElement("label");t.setAttribute("required",""),t.setAttribute("id","title"),e.setAttribute("for","title"),e.textContent="Title: ";const n=document.createElement("input"),r=document.createElement("label");n.setAttribute("id","description"),r.setAttribute("for","description"),r.textContent="Description: ";const o=document.createElement("select");o.textContent="Priority",o.setAttribute("id","priority");const c=document.createElement("option");c.setAttribute("value","High"),c.textContent="High";const i=document.createElement("option");i.setAttribute("value","Mid"),i.textContent="Mid";const a=document.createElement("option");a.setAttribute("value","Low"),a.textContent="Low",o.appendChild(c),o.appendChild(i),o.appendChild(a);const u=document.createElement("label");u.setAttribute("for","priority"),u.textContent="Priority: ";const l=document.createElement("input");l.setAttribute("type","date");const s=document.createElement("button");s.setAttribute("type","button"),s.textContent="Submit",s.addEventListener("click",(()=>j.submit()));const d=document.createElement("button");d.setAttribute("type","button"),d.textContent="Cancel";const p=document.createElement("form");return p.appendChild(e),p.appendChild(t),p.appendChild(r),p.appendChild(n),p.appendChild(u),p.appendChild(o),p.appendChild(l),p.appendChild(s),p.appendChild(d),{title:t,description:n,priority:o,dueDate:l,submit:s,cancel:d,form:p}})(),j={submit:()=>{A.title.checkValidity()?(P.addTaskToArray(P.currentProject),console.log(P.currentProject),A.title.value="",A.description.value="",A.dueDate.value="",y()):A.title.reportValidity()}},E=(()=>{const t=document.createElement("input"),e=document.createElement("label");t.setAttribute("required",""),t.setAttribute("id","title"),e.setAttribute("for","title"),e.textContent="Project Title: ";const n=document.createElement("button");n.setAttribute("type","button"),n.textContent="Submit",n.addEventListener("click",(()=>x.submit()));const r=document.createElement("form");return r.appendChild(e),r.appendChild(t),r.appendChild(n),{title:t,form:r}})(),x={submit:()=>{E.title.checkValidity()?(S.addtoProjectList(),E.title.value="",b()):E.title.reportValidity()}},g=t=>({title:t,array:[]}),P=(()=>{const t=g("today");return{today:t,addTaskToArray:t=>{const e=(n=A.title.value,r=A.description.value,o=A.priority.value,c=A.dueDate.value,{title:n,description:r,priority:o,dueDate:c});var n,r,o,c;t.array.push(e)},currentProject:t}})(),S=(()=>{const t=[P.today];return{projectList:t,addtoProjectList:()=>{const e=E.title.value,n=g(e);t.push(n),console.log(t)}}})(),T=document.querySelector(".container"),L=document.querySelector(".currentProject");T.appendChild(A.form),T.appendChild(E.form);const k=(()=>{const t=document.createElement("p");return t.textContent=P.currentProject.title,{currentProjectTitle:t,appendTitle:()=>L.appendChild(t)}})();y(),b(),k.appendTitle()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,