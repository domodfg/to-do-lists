(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(537),o=n.n(r),i=n(645),a=n.n(i)()(o());a.push([e.id,"body {\n    margin: 0;\n}\n\n.container {\n    display: grid;\n    grid-template-columns: 1fr 5fr; ;\n    grid-template-rows: 10fr 0.5fr;\n    width: 100vw;\n    min-height: 100vh;\n}\n\n.projectContainer {\n    width: 100%;\n    justify-self: center;\n    display: grid;\n    grid-template-rows: 1fr 5fr;\n    background-color: #002c30;\n    color: white;\n}\n\n.rightSide {\n    display: grid;\n    grid-template-rows: 2fr 10fr;\n}\n\n.hidden {\n    display: none;\n}\n\n.header {\n    width: 100%;\n    display: flex;\n    background-color: #0d1112;\n    color: white;\n}\n\n.currentProject {\n    width: 30vw;\n    text-align: center;\n    align-self: center;\n}\n\n.createTask {\n    align-self: center;\n}\n\n.taskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 10vh 10vw;\n    background-color: #0d1112;\n    color: white;\n}\n\n.task {\n    width: 60%;\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    border: 1px white solid;\n    border-radius: 10px;\n    padding: 10px 30px;\n}\n\n.form {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    gap: 15px;\n    width: 50vw;\n    padding: 2vh 0px;\n} \n\n.title{\n    flex: 1;\n}\n\n\n.project {\n    display: flex;\n    width: 70%;\n    justify-content: space-between;\n    padding-left: 1vw;\n \n}\n\n.projectList {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    gap: 10px;\n}\n\n.createProject {\n    align-self: flex-start;\n    margin-left: 1vw;\n}\n\n\n.footer {\n    text-align: center;\n    align-self: center;\n    justify-self: center;\n    grid-column: 1 / 3;\n    background-color: #2a2a2a;\n    width: 100%;\n    color: white;\n}\n\ninput {\n    border-radius: 5px;\n    border: 1px white solid;\n    padding-left: 5px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;AACb;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,8BAA8B;IAC9B,YAAY;IACZ,iBAAiB;AACrB;;AAEA;IACI,WAAW;IACX,oBAAoB;IACpB,aAAa;IACb,2BAA2B;IAC3B,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,4BAA4B;AAChC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,kBAAkB;IAClB,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,UAAU;IACV,aAAa;IACb,mBAAmB;IACnB,eAAe;IACf,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,mBAAmB;IACnB,SAAS;IACT,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,OAAO;AACX;;;AAGA;IACI,aAAa;IACb,UAAU;IACV,8BAA8B;IAC9B,iBAAiB;;AAErB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,eAAe;IACf,SAAS;AACb;;AAEA;IACI,sBAAsB;IACtB,gBAAgB;AACpB;;;AAGA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,oBAAoB;IACpB,kBAAkB;IAClB,yBAAyB;IACzB,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,iBAAiB;AACrB",sourcesContent:["body {\n    margin: 0;\n}\n\n.container {\n    display: grid;\n    grid-template-columns: 1fr 5fr; ;\n    grid-template-rows: 10fr 0.5fr;\n    width: 100vw;\n    min-height: 100vh;\n}\n\n.projectContainer {\n    width: 100%;\n    justify-self: center;\n    display: grid;\n    grid-template-rows: 1fr 5fr;\n    background-color: #002c30;\n    color: white;\n}\n\n.rightSide {\n    display: grid;\n    grid-template-rows: 2fr 10fr;\n}\n\n.hidden {\n    display: none;\n}\n\n.header {\n    width: 100%;\n    display: flex;\n    background-color: #0d1112;\n    color: white;\n}\n\n.currentProject {\n    width: 30vw;\n    text-align: center;\n    align-self: center;\n}\n\n.createTask {\n    align-self: center;\n}\n\n.taskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 10vh 10vw;\n    background-color: #0d1112;\n    color: white;\n}\n\n.task {\n    width: 60%;\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    border: 1px white solid;\n    border-radius: 10px;\n    padding: 10px 30px;\n}\n\n.form {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    gap: 15px;\n    width: 50vw;\n    padding: 2vh 0px;\n} \n\n.title{\n    flex: 1;\n}\n\n\n.project {\n    display: flex;\n    width: 70%;\n    justify-content: space-between;\n    padding-left: 1vw;\n \n}\n\n.projectList {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    gap: 10px;\n}\n\n.createProject {\n    align-self: flex-start;\n    margin-left: 1vw;\n}\n\n\n.footer {\n    text-align: center;\n    align-self: center;\n    justify-self: center;\n    grid-column: 1 / 3;\n    background-color: #2a2a2a;\n    width: 100%;\n    color: white;\n}\n\ninput {\n    border-radius: 5px;\n    border: 1px white solid;\n    padding-left: 5px;\n}"],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);r&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),t.push(s))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},a=[],c=0;c<e.length;c++){var d=e[c],l=r.base?d[0]+r.base:d[0],s=i[l]||0,u="".concat(l," ").concat(s);i[l]=s+1;var p=n(u),A={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)t[p].references++,t[p].updater(A);else{var m=o(A,r);r.byIndex=c,t.splice(c,0,{identifier:u,updater:m,references:1})}a.push(u)}return a}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=n(i[a]);t[c].references--}for(var d=r(e,o),l=0;l<i.length;l++){var s=n(i[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}i=d}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0;var r={};(()=>{n.d(r,{O:()=>W});var e=n(379),t=n.n(e),o=n(795),i=n.n(o),a=n(569),c=n.n(a),d=n(565),l=n.n(d),s=n(216),u=n.n(s),p=n(589),A=n.n(p),m=n(426),f={};f.styleTagTransform=A(),f.setAttributes=l(),f.insert=c().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=u(),t()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;const h=n.p+"8905629feddce646246d.png",C=n.p+"f0f464d886429f8c9eb1.png",y=(()=>{const e=document.createElement("input"),t=document.createElement("label");e.setAttribute("required",""),e.setAttribute("id","title"),t.setAttribute("for","title"),t.textContent="Title: ";const n=document.createElement("input"),r=document.createElement("label");n.setAttribute("id","description"),r.setAttribute("for","description"),r.textContent="Description: ";const o=document.createElement("select");o.textContent="Priority",o.setAttribute("id","priority");const i=document.createElement("option");i.setAttribute("value","High"),i.textContent="High";const a=document.createElement("option");a.setAttribute("value","Mid"),a.textContent="Mid";const c=document.createElement("option");c.setAttribute("value","Low"),c.textContent="Low",o.appendChild(i),o.appendChild(a),o.appendChild(c);const d=document.createElement("label");d.setAttribute("for","priority"),d.textContent="Priority: ";const l=document.createElement("input");l.setAttribute("type","date"),l.setAttribute("class","date");const s=new Image;s.src=C,s.setAttribute("type","button"),s.setAttribute("class","formSubmit");const u=new Image;u.src=h,u.setAttribute("type","button");const p=document.createElement("form");p.setAttribute("class","form");const A=document.createElement("div");A.appendChild(t),A.appendChild(e);const m=document.createElement("div");m.appendChild(r),m.appendChild(n);const f=document.createElement("div");return f.appendChild(d),f.appendChild(o),p.appendChild(A),p.appendChild(m),p.appendChild(f),p.appendChild(l),p.appendChild(s),p.appendChild(u),{title:e,description:n,priority:o,dueDate:l,submit:s,cancel:u,form:p}})(),v=(()=>{const e=document.createElement("input"),t=document.createElement("label");e.setAttribute("required",""),e.setAttribute("id","title"),t.setAttribute("for","title"),t.textContent="Project Title: ";const n=new Image;n.src=C,n.setAttribute("type","button"),n.setAttribute("class","projectSubmit");const r=new Image;r.src=h,r.setAttribute("type","button");const o=document.createElement("form");return o.appendChild(t),o.appendChild(e),o.appendChild(n),o.appendChild(r),{title:e,form:o,submit:n,cancel:r}})(),g=(y.cancel.addEventListener("click",(()=>{y.form.remove()})),v.cancel.addEventListener("click",(()=>{v.form.remove()})),n.p+"bf24433d62ff61ca500b.png"),b=(()=>{const e=y.form,t=new Image;return t.src=g,t.setAttribute("class",".formEdit"),t.setAttribute("type","button"),{editForm:e,switchForm:()=>{t.removeAttribute("id"),e.removeChild(y.cancel),e.appendChild(t),e.appendChild(y.cancel)},formEditButton:t}})(),B=(()=>{const e=localStorage.getItem("projectStorage");return{projectStoreParsed:JSON.parse(e),store:()=>{localStorage.setItem("projectStorage",JSON.stringify(L.projectList))}}})(),I=n.p+"31bb92f769b58c794b39.png",w=n.p+"e21ce55f730ff6524c4e.png",x=()=>{const e=document.querySelectorAll(".task"),t=document.querySelectorAll(".remove"),n=document.querySelectorAll(".edit");e.forEach(((e,t)=>{e.id=t})),t.forEach(((e,t)=>{e.id=t})),n.forEach(((e,t)=>{e.id=t}))},j=()=>{const e=document.querySelector(".taskContainer");document.querySelectorAll(".task").forEach((t=>{e.removeChild(t)}));for(let t=0;t<P.currentProject.array.length;t++){const n=document.createElement("div");n.textContent=P.currentProject.array[t].title,n.setAttribute("class","title"),document.createElement("div").textContent=P.currentProject.array[t].description;const r=document.createElement("div");r.textContent=P.currentProject.array[t].dueDate,r.setAttribute("class","dueDate");const o=new Image;o.src=w,o.setAttribute("id",t),o.setAttribute("class","remove"),o.addEventListener("click",(()=>{const t=document.querySelectorAll(".task");P.currentProject.array.splice(o.id,1),e.removeChild(t[o.id]),x(),B.store()}));const i=new Image;i.src=I,i.setAttribute("id",t),i.setAttribute("class","edit"),i.addEventListener("click",(()=>{a.appendChild(b.editForm),b.switchForm(),b.formEditButton.setAttribute("id",i.id),b.formEditButton.classList.remove("hidden"),y.submit.classList.add("hidden"),y.title.value=P.currentProject.array[b.formEditButton.id].title,y.description.value=P.currentProject.array[b.formEditButton.id].description,y.priority.value=P.currentProject.array[b.formEditButton.id].priority,y.dueDate.value=P.currentProject.array[b.formEditButton.id].dueDate}));const a=document.createElement("div");a.setAttribute("id",t),a.setAttribute("class","task"),a.appendChild(i),a.appendChild(n),a.appendChild(r),a.appendChild(o),e.appendChild(a)}},E=(b.formEditButton.addEventListener("click",(()=>{if(y.title.checkValidity()){const e=y.title.value,t=y.description.value,n=y.priority.value,r=y.dueDate.value;P.currentProject.array[b.formEditButton.id].title=e,P.currentProject.array[b.formEditButton.id].description=t,P.currentProject.array[b.formEditButton.id].priority=n,P.currentProject.array[b.formEditButton.id].dueDate=r,B.store(),console.log(P.currentProject.array),j()}else y.title.reportValidity()})),()=>{const e=document.querySelector(".projectList");document.querySelectorAll(".project").forEach((t=>{e.removeChild(t)}));for(let t=0;t<L.projectList.length;t++){const n=document.createElement("a");n.textContent=L.projectList[t].title,n.setAttribute("id",t),n.setAttribute("class","projectTitle"),n.addEventListener("click",(()=>{P.currentProject=L.projectList[n.id],W.currentProjectTitle.textContent=P.currentProject.title,j()}));const r=new Image;r.src=w,r.setAttribute("id",t),r.setAttribute("class","projectRemove"),r.addEventListener("click",(()=>{const t=document.querySelectorAll(".project");L.projectList.splice(r.id,1),e.removeChild(t[r.id]),B.store(),k(),P.currentProject=localStorage.hasOwnProperty("projectStorage")?B.projectStoreParsed[0]:P.today,W.currentProjectTitle.textContent=P.currentProject.title,j()}));const o=document.createElement("div");o.setAttribute("id",t),o.setAttribute("class","project"),o.appendChild(n),t>0&&o.appendChild(r),e.appendChild(o)}}),k=()=>{const e=document.querySelectorAll(".project"),t=document.querySelectorAll(".projectRemove"),n=document.querySelectorAll(".projectTitle");e.forEach(((e,t)=>{e.id=t})),t.forEach(((e,t)=>{e.id=t+1})),n.forEach(((e,t)=>{e.id=t}))},S=e=>({title:e,array:[]}),P=(()=>{const e=S("today");return{today:e,addTaskToArray:e=>{const t=(n=y.title.value,r=y.description.value,o=y.priority.value,i=y.dueDate.value,{title:n,description:r,priority:o,dueDate:i});var n,r,o,i;e.array.push(t)},currentProject:localStorage.hasOwnProperty("projectStorage")?B.projectStoreParsed[0]:e}})(),L=(()=>{let e=localStorage.hasOwnProperty("projectStorage")?B.projectStoreParsed:[P.today];return{projectList:e,addtoProjectList:()=>{const t=v.title.value,n=S(t);e.push(n)}}})(),T=document.querySelector(".taskContainer"),q=document.querySelector(".projectList"),D=document.querySelector(".currentProject"),O=document.querySelector(".createTask"),M=document.querySelector(".createProject");O.addEventListener("click",(()=>{y.title.value="",y.description.value="",y.dueDate.value="",y.submit.classList.remove("hidden"),b.formEditButton.classList.add("hidden"),T.appendChild(y.form)})),M.addEventListener("click",(()=>{q.appendChild(v.form)})),y.submit.addEventListener("click",(()=>{y.title.checkValidity()?(P.addTaskToArray(P.currentProject),B.store(),y.title.value="",y.description.value="",y.dueDate.value="",j(),y.form.remove()):y.title.reportValidity()})),v.submit.addEventListener("click",(()=>{v.title.checkValidity()?(L.addtoProjectList(),B.store(),v.title.value="",E(),v.form.remove()):v.title.reportValidity()}));const W=(()=>{const e=document.createElement("p");return e.textContent=P.currentProject.title,{currentProjectTitle:e,appendTitle:()=>D.appendChild(e)}})();E(),j(),W.appendTitle()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,